{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Hyrapi <p>Hyrapi is a CLI-based REST API client powered by a YAML collection file. It helps you organize and execute API requests by grouping endpoints, headers, tokens, and authentication configs in a single file.</p>"},{"location":"#installation","title":"Installation","text":""},{"location":"#method-1-manual","title":"Method 1: Manual","text":"<pre><code>git clone https://github.com/hwisnu222/hyrapi.git\ncd hyrapi\nmake build\ncd dist/\nchmod +x hyr\nsudo mv hyr /usr/local/bin/\n</code></pre>"},{"location":"#method-2-one-line-script","title":"Method 2: One-Line Script","text":"<pre><code>curl -fsSL https://raw.githubusercontent.com/hwisnu222/hyrapi/main/install.sh | sh\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>Run <code>hyr</code> with a YAML config file:</p> <pre><code>hyr -c collections.yml\n</code></pre>"},{"location":"#list-all-servers","title":"List all servers:","text":"<pre><code>hyr -c collections.yml -s\n</code></pre>"},{"location":"#list-all-paths","title":"List all paths:","text":"<pre><code>hyr -c collections.yml -p\n</code></pre>"},{"location":"#sample-collectionsyml","title":"Sample <code>collections.yml</code>","text":"<pre><code>servers:\n  - url: http://localhost:3000/api/v1\n    name: development\n    description: Development Server\n  - url: http://example.com/api/v1\n    name: staging\n    description: Staging Server\n  - url: http://example.com/api/v1\n    name: production\n    description: Production Server\n\nvariables:\n  global_token: abc123 # global variable\n  development:\n    token: dev_token_value # scoped to 'development'\n  staging:\n    token: staging_token_value\n  production:\n    token: production_token_value\n\npaths:\n  - endpoint: /incomes\n    name: getIncomes\n    method: GET\n    auth:\n      type: bearer\n      token: \"{{token}}\"\n    headers:\n      Content-Type: application/json\n\n  - endpoint: /incomes/4\n    name: deleteIncomes\n    method: DELETE\n    auth:\n      type: bearer\n      token: \"{{token}}\"\n    headers:\n      Content-Type: application/json\n</code></pre>"},{"location":"#configuration-reference","title":"Configuration Reference","text":""},{"location":"#servers","title":"<code>servers</code>","text":"<p>Defines base URLs grouped by environment:</p> <pre><code>servers:\n  - url: http://localhost:3000/api\n    name: development\n    description: Dev server\n</code></pre>"},{"location":"#variables","title":"<code>variables</code>","text":"<p>Reusable values, defined globally or per-environment:</p> <pre><code>variables:\n  token: abc123 # global\n  development:\n    token: devtoken123 # only for development\n</code></pre> <p>To reference variables: <code>{{token}}</code></p>"},{"location":"#paths","title":"<code>paths</code>","text":"<p>Defines API requests:</p> <pre><code>paths:\n  - endpoint: /posts\n    name: getPosts\n    method: GET\n    auth:\n      type: bearer\n      token: \"{{token}}\"\n    headers:\n      Content-Type: application/json\n</code></pre> <p>Supported fields:</p> Field Description <code>endpoint</code> Relative path of API route <code>name</code> Identifier for the request <code>method</code> HTTP method (GET, POST, etc.) <code>auth</code> Auth config (see below) <code>headers</code> Optional custom headers"},{"location":"#authentication-options","title":"Authentication Options","text":"<p>Hyrapi supports multiple authentication types:</p>"},{"location":"#bearer-token","title":"Bearer Token","text":"<pre><code>auth:\n  type: bearer\n  token: \"{{token}}\"\n</code></pre> <p>Sends <code>Authorization: Bearer &lt;token&gt;</code>.</p>"},{"location":"#basic-auth","title":"Basic Auth","text":"<pre><code>auth:\n  type: basic\n  username: admin\n  password: secret\n</code></pre> <p>Sends base64-encoded <code>Authorization: Basic</code>.</p>"},{"location":"#api-key-header-based","title":"API Key (Header-based)","text":"<pre><code>auth:\n  type: apikey\n  api_key: abc123\n  api_key_header: X-API-Key\n</code></pre> <p>Sends <code>X-API-Key: abc123</code>. Header name is customizable.</p>"},{"location":"#digest-auth","title":"Digest Auth","text":"<pre><code>auth:\n  type: digest\n  username: admin\n  password: secret\n</code></pre> <p>Sends HTTP Digest Authentication headers.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>YAML-based API request collection</li> <li>Multiple environments (dev/staging/prod)</li> <li>Built-in support for Bearer, Basic, Digest, and API Key auth</li> <li>Variable interpolation</li> <li>CLI commands:</li> <li><code>-s</code>: list servers</li> <li><code>-p</code>: list all paths</li> </ul>"},{"location":"#roadmap-planned-features","title":"Roadmap (Planned Features)","text":"<ul> <li>Request body support for <code>POST</code>, <code>PUT</code>, <code>PATCH</code></li> <li>Path/query parameter support</li> <li>Response highlighting</li> <li>Time and size measurement</li> <li>Collection/file manager (like Postman)</li> <li>Output formatter (raw / table / JSON)</li> </ul>"},{"location":"#author","title":"Author","text":"<p>Hyrapi by @hwisnu222 Contributions and feedback are welcome!</p>"},{"location":"collections/","title":"Collections","text":""},{"location":"collections/#servers","title":"Servers","text":"<p>You can define multiple servers for different environments such as development, staging, or production.</p> <pre><code>servers:\n  - url: http://localhost:3000/api/v1\n    name: development\n    description: Development server\n  - url: http://example.com/api/v1\n    name: staging\n    description: Staging server\n</code></pre>"},{"location":"collections/#variables","title":"Variables","text":"<p>You can define global or environment-specific (local) variables.</p>"},{"location":"collections/#global-variables","title":"Global Variables","text":"<pre><code>variables:\n  key: key_value # Global variable\n</code></pre>"},{"location":"collections/#local-variables-per-environment","title":"Local Variables (Per Environment)","text":"<p>You can define variables scoped to specific environments.</p> <pre><code>variables:\n  development:\n    token: key_value # Local variable, available only for the development environment\n</code></pre> <p>To access variables, use this syntax:</p> <pre><code>paths:\n  - endpoint: /posts\n    name: getPosts\n    auth:\n      type: bearer\n      token: \"{{token}}\"\n</code></pre>"},{"location":"collections/#headers","title":"Headers","text":"<p>To define request headers (such as <code>Content-Type</code>), you can configure them per path.</p> <pre><code>paths:\n  - endpoint: /posts\n    name: getPosts\n    headers:\n      Content-Type: application/json\n      # Content-Type: application/x-www-form-urlencoded\n</code></pre>"},{"location":"collections/#authentication","title":"Authentication","text":"<p>You can define authentication for each endpoint as follows:</p>"},{"location":"collections/#bearer-token","title":"Bearer Token","text":"<pre><code>paths:\n  - endpoint: /posts\n    name: getPosts\n    auth:\n      type: bearer\n      token: \"{{token}}\"\n</code></pre>"},{"location":"collections/#basic-auth","title":"Basic Auth","text":"<pre><code>paths:\n  - endpoint: /posts\n    name: getPosts\n    auth:\n      type: basic\n      username: \"{{username}}\"\n      password: \"{{password}}\"\n</code></pre>"},{"location":"collections/#api-key-header","title":"API Key (Header)","text":"<pre><code>paths:\n  - endpoint: /posts\n    name: getPosts\n    auth:\n      type: apikey\n      api_key: abc123\n      api_key_header: X-API-Key\n</code></pre> <p>This will send the header: <code>X-API-Key: abc123</code></p> <p>You can customize the header name using <code>api_key_header</code>.</p>"},{"location":"collections/#digest-authentication","title":"Digest Authentication","text":"<pre><code>paths:\n  - endpoint: /posts\n    name: getPosts\n    auth:\n      type: digest\n      username: admin\n      password: secret\n</code></pre>"},{"location":"collections/#multipart-form-data","title":"Multipart Form Data","text":"<p>To send <code>multipart/form-data</code> (typically for file upload), define the <code>body</code> fields and file paths:</p> <pre><code>paths:\n  - endpoint: /upload\n    name: upload\n    method: POST\n    headers:\n      Content-Type: multipart/form-data\n    body:\n      title: lorem\n      file: \"./path/file.png\"\n</code></pre> <ul> <li><code>headers.Content-Type</code>: Should be set to <code>multipart/form-data</code> to indicate file upload.</li> <li><code>body</code>: Key-value pairs to be sent. For file fields, use a relative or absolute path to the file.</li> </ul> <p>Note: Files are automatically detected if the value is a valid path to a local file.</p>"}]}